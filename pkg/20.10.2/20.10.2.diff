diff -uNr 20.10.2.orig.sh 20.10.2.sh
--- 20.10.2.orig.sh	2021-03-22 23:44:28.000000000 +0100
+++ 20.10.2.sh	2021-03-22 23:51:17.000000000 +0100
@@ -21,26 +21,34 @@
 # the script was uploaded (Should only be modified by upload job):
 SCRIPT_COMMIT_SHA="3d8fe77c2c46c5b7571f94b42793905e5b3e42e4"
 
+CHANNEL="stable"
+DOWNLOAD_URL="https://download.docker.com"
+REPO_FILE="docker-ce.repo"
+VERSION=20.10.2
+DIND_TEST_WAIT=${DIND_TEST_WAIT:-3s}  # Wait time until docker start at dind test env
+
+# Issue https://github.com/rancher/rancher/issues/29246
+adjust_repo_releasever() {
+	DOWNLOAD_URL="https://download.docker.com"
+	case $1 in
+	7*)
+		releasever=7
+		;;
+	8*)
+		releasever=8
+		;;
+	*)
+		# fedora, or unsupported
+		return
+		;;
+	esac
 
-# The channel to install from:
-#   * nightly
-#   * test
-#   * stable
-#   * edge (deprecated)
-DEFAULT_CHANNEL_VALUE="stable"
-if [ -z "$CHANNEL" ]; then
-	CHANNEL=$DEFAULT_CHANNEL_VALUE
-fi
-
-DEFAULT_DOWNLOAD_URL="https://download.docker.com"
-if [ -z "$DOWNLOAD_URL" ]; then
-	DOWNLOAD_URL=$DEFAULT_DOWNLOAD_URL
-fi
-
-DEFAULT_REPO_FILE="docker-ce.repo"
-if [ -z "$REPO_FILE" ]; then
-	REPO_FILE="$DEFAULT_REPO_FILE"
-fi
+	for channel in "stable" "test" "nightly"; do
+		$sh_c "$config_manager --setopt=docker-ce-${channel}.baseurl=${DOWNLOAD_URL}/linux/centos/${releasever}/\\\$basearch/${channel} --save";
+		$sh_c "$config_manager --setopt=docker-ce-${channel}-debuginfo.baseurl=${DOWNLOAD_URL}/linux/centos/${releasever}/debug-\\\$basearch/${channel} --save";
+		$sh_c "$config_manager --setopt=docker-ce-${channel}-source.baseurl=${DOWNLOAD_URL}/linux/centos/${releasever}/source/${channel} --save";
+	done
+}
 
 mirror=''
 DRY_RUN=${DRY_RUN:-}
@@ -69,6 +77,18 @@
 		;;
 esac
 
+start_docker() {
+	if [ ! -z $DIND_TEST ]; then
+		# Starting dockerd manually due to dind env is not using systemd
+		dockerd &
+		sleep $DIND_TEST_WAIT
+	elif [ -d '/run/systemd/system' ] ; then
+		$sh_c 'systemctl start docker'
+	else
+		$sh_c 'service docker start'
+	fi
+}
+
 command_exists() {
 	command -v "$@" > /dev/null 2>&1
 }
@@ -334,6 +354,12 @@
 			fi
 		;;
 
+		oracleserver|ol)
+			lsb_dist="ol"
+			# need to switch lsb_dist to match yum repo URL
+			dist_version="$(rpm -q --whatprovides redhat-release --queryformat "%{VERSION}\n" | sed 's/\/.*//' | sed 's/\..*//' | sed 's/Server*//')"
+		;;
+
 		*)
 			if command_exists lsb_release; then
 				dist_version="$(lsb_release --release | cut -f2)"
@@ -404,12 +430,14 @@
 					$sh_c "apt-get install -y -qq --no-install-recommends docker-ce-cli=$cli_pkg_version >/dev/null"
 				fi
 				$sh_c "apt-get install -y -qq --no-install-recommends docker-ce$pkg_version >/dev/null"
+				start_docker
 			)
 			echo_docker_as_nonroot
 			exit 0
 			;;
-		centos|fedora|rhel)
-			yum_repo="$DOWNLOAD_URL/linux/$lsb_dist/$REPO_FILE"
+		centos|fedora|rhel|ol)
+			# installing centos packages
+			yum_repo="$DOWNLOAD_URL/linux/centos/$REPO_FILE"
 			if ! curl -Ifs "$yum_repo" > /dev/null; then
 				echo "Error: Unable to curl repository file $yum_repo, is it valid?"
 				exit 1
@@ -440,6 +468,25 @@
 					$sh_c "$config_manager $disable_channel_flag docker-ce-*"
 					$sh_c "$config_manager $enable_channel_flag docker-ce-$CHANNEL"
 				fi
+				if [ "$lsb_dist" = "rhel" ] || [ "$lsb_dist" = "ol" ]; then
+					adjust_repo_releasever "$dist_version"
+					# Add extra repo for version 7.x
+					if [[ "$dist_version" =~ "7." ]] || [ "$dist_version" == "7" ] ; then
+						if [ "$lsb_dist" = "rhel" ]; then
+							$sh_c "$config_manager $enable_channel_flag rhui-REGION-rhel-server-extras"
+							$sh_c "$config_manager $enable_channel_flag rhui-rhel-7-server-rhui-extras-rpms"
+							$sh_c "$config_manager $enable_channel_flag rhui-rhel-7-for-arm-64-extras-rhui-rpms"
+							$sh_c "$config_manager $enable_channel_flag rhel-7-server-rhui-extras-rpms"
+							$sh_c "$config_manager $enable_channel_flag rhel-7-server-extras-rpms"
+						else
+							$sh_c "$config_manager $enable_channel_flag ol7_addons"
+							# Adding OL7 developer repo if doesn't exist
+							if [ "$(yum repolist | grep yum.oracle.com_repo_OracleLinux_OL7_developer > /dev/null || echo add)" == "add" ]; then
+								$sh_c "$config_manager --add-repo https://yum.oracle.com/repo/OracleLinux/OL7/developer/x86_64"
+							fi
+						fi
+					fi
+				fi
 				$sh_c "$pkg_manager makecache"
 			)
 			pkg_version=""
@@ -474,10 +521,25 @@
 					$sh_c "$pkg_manager install -y -q docker-ce-cli-$cli_pkg_version"
 				fi
 				$sh_c "$pkg_manager install -y -q docker-ce$pkg_version"
+				if ! command_exists iptables; then
+					$sh_c "$pkg_manager install -y -q iptables"
+				fi
+				start_docker
 			)
 			echo_docker_as_nonroot
 			exit 0
 			;;
+		rancheros)
+			(
+			set -x
+			$sh_c "sleep 3;ros engine list --update"
+			engine_version="$(sudo ros engine list | awk '{print $2}' | grep ${docker_version} | tail -n 1)"
+			if [ "$engine_version" != "" ]; then
+				$sh_c "ros engine switch -f $engine_version"
+			fi
+			)
+			exit 0
+			;;
 		*)
 			if [ -z "$lsb_dist" ]; then
 				if is_darwin; then
